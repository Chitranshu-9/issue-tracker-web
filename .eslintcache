[{"D:\\issue-tracker\\src\\index.js":"1","D:\\issue-tracker\\src\\App.js":"2","D:\\issue-tracker\\src\\reportWebVitals.js":"3","D:\\issue-tracker\\src\\components\\homepage.js":"4","D:\\issue-tracker\\src\\components\\createproject.js":"5","D:\\issue-tracker\\src\\components\\ProjectDetail.js":"6","D:\\issue-tracker\\src\\components\\createIssue.js":"7","D:\\issue-tracker\\src\\components\\firebaseSetup.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":1675,"mtime":1611844893527,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":4281,"mtime":1612449378496,"results":"13","hashOfConfig":"10"},{"size":1917,"mtime":1612450575383,"results":"14","hashOfConfig":"10"},{"size":9266,"mtime":1612449870988,"results":"15","hashOfConfig":"10"},{"size":13413,"mtime":1612450970689,"results":"16","hashOfConfig":"10"},{"size":605,"mtime":1611484908538,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1r6ov62",{"filePath":"21","messages":"22","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\issue-tracker\\src\\index.js",[],["39","40"],"D:\\issue-tracker\\src\\App.js",["41","42","43","44","45","46","47"],"// import logo from './logo.svg';\nimport './App.css';\nimport HomePage from './components/homepage';\nimport CreateIssue from './components/createIssue';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './components/navbar.css';\nimport { useState } from \"react\";\nimport { createIssue } from \"./components/createIssue\";\nimport { ProjectDetail } from \"./components/ProjectDetail\";\n\n\nfunction App() {\n  var [isHome, setIsHome] = useState(false);\n  function updateHome() {\n    setIsHome(!isHome);\n  }\n\n  // console.log(isHome)\n  return (\n\n    < Router >\n\n      <div className=\"App\">\n        {/* <h1>Issue tracker</h1> */}\n        {/* <nav class=\"navbar navbar-expand-sm   navbar-light bg-light\">\n          <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <a class=\"navbar-brand\" href=\"#\">Issue Tracker</a>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\n            <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\" onClick={updateHome}> Home </a>\n              </li>\n              \n            </ul>\n            <form class=\"form-inline my-2 my-lg-0\">\n              <input id=\"search-box\" class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n            </form>\n          </div>\n        </nav> */}\n        <HomePage />\n      </div>\n    </Router >\n  );\n}\n\nexport default App;\n","D:\\issue-tracker\\src\\reportWebVitals.js",[],"D:\\issue-tracker\\src\\components\\homepage.js",["48","49","50","51","52","53"],"import React, { Component } from 'react';\r\nimport CreateProject from './createproject';\r\nimport ProjectDetail from './ProjectDetail';\r\nimport CreateIssue from './createIssue';\r\nimport './navbar.css'\r\nimport '../App.css'\r\n\r\nimport firebaseDB from \"./firebaseSetup\";\r\nimport {\r\n    BrowserRouter as Router, Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            listOfProjects: {},\r\n            projectClicked: false,\r\n            currentProjectId: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebaseDB.child('projectDesc').on('value', snapshot => {\r\n            if (snapshot.val() != null) {\r\n                this.setState({\r\n                    listOfProjects: snapshot.val()\r\n                })\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const addOrEdit = obj => {\r\n            firebaseDB.child('projectDesc').push(\r\n                obj\r\n            )\r\n        }\r\n\r\n        const createIssue = obj => {\r\n            firebaseDB.child('issueDesc').push(\r\n                obj\r\n            )\r\n        }\r\n\r\n        const projectList = this.state.listOfProjects;\r\n        // console.log(this.state);\r\n        // console.log(\"currentProjectId\", this.state.currentProjectId);\r\n        return (\r\n            <Router>\r\n                <div>\r\n\r\n\r\n\r\n                    {/* <CreateProject addOrEdit={addOrEdit} /> */}\r\n                    {/* <CreateIssue createIssue={createIssue} /> */}\r\n\r\n\r\n\r\n\r\n                    <ul>\r\n\r\n                        {this.state.projectClicked ? <CreateIssue createIssue={createIssue} currentProjectId={this.state.currentProjectId} /> :\r\n                            <div>\r\n                                <nav class=\"navbar navbar-expand-sm   navbar-light bg-light\">\r\n                                    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                        <span class=\"navbar-toggler-icon\"></span>\r\n                                    </button>\r\n                                    <a class=\"navbar-brand\" href=\"#\">Issue Tracker</a>\r\n\r\n                                    <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n                                        <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                                            <li class=\"nav-item\">\r\n                                                <a class=\"nav-link\" href=\"#\"> Home </a>\r\n                                            </li>\r\n\r\n                                        </ul>\r\n                                        <form class=\"form-inline my-2 my-lg-0\">\r\n                                            <input id=\"search-box\" class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                                        </form>\r\n                                    </div>\r\n                                </nav>\r\n                                <br />\r\n                                {this.state.projectClicked ? null : <CreateProject addOrEdit={addOrEdit} />}\r\n                                <br />\r\n                                {Object.keys(this.state.listOfProjects).map(id => {\r\n                                    return <li className=\"list-item\" key={id} onClick={() => {\r\n                                        this.setState({\r\n                                            projectClicked: !this.state.projectClicked,\r\n                                            currentProjectId: id\r\n                                        })\r\n                                    }}>Author: {projectList[id].Author} <br />\r\n                            Description: {projectList[id].Description}<br />\r\n                                        {/* Labels: {projectList[id].Labels}<br /> */}\r\n                            Title: {projectList[id].Title}<hr /></li>\r\n                                })}\r\n                            </div>\r\n                        }\r\n\r\n                    </ul>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","D:\\issue-tracker\\src\\components\\createproject.js",[],"D:\\issue-tracker\\src\\components\\ProjectDetail.js",["54","55","56","57","58","59","60","61"],"import React, { Component } from 'react';\r\nimport firebaseDB from \"./firebaseSetup\";\r\n\r\nclass ProjectDetail extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            listOfIssues: [],\r\n            filteredResults: [],\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebaseDB.child('issueDesc').on('value', snapshot => {\r\n            if (snapshot.val() != null) {\r\n                // var pred = this.state.listOfIssues.concat(snapshot.val())\r\n                this.setState({\r\n                    listOfIssues: snapshot.val()\r\n                })\r\n                var state = snapshot.val();\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        // console.log('state of project details', this.state.listOfIssues);\r\n        // console.log(\"authorSelected-projectDetails\", this.props.authorSelected)\r\n        // console.log(\"authorSearchKey\", this.props.authorSearchKey);\r\n        // console.log(\"searchLabels-project details\", this.props.searchLabels);\r\n        var labels = this.props.searchLabels\r\n        var newexparr = labels.map(label => { return label });\r\n        var listOfIssuesarr = Object.keys(this.state.listOfIssues).map(issue => { return this.state.listOfIssues[issue] })\r\n        // console.log(\"listOfIssuesarr\", listOfIssuesarr);\r\n\r\n        let filteredArr = listOfIssuesarr.filter(itemX => newexparr.includes(itemX.Labels));\r\n\r\n        console.log(\"filteredArr\", filteredArr);\r\n        var res = Object.keys(this.state.listOfIssues).filter(val => {\r\n\r\n            var results = this.props.searchLabels.map(label => {\r\n                if (this.state.listOfIssues[val].Labels === label) {\r\n                    // console.log(\"this.state.listOfIssues[val]\", this.state.listOfIssues[val])\r\n                    return this.state.listOfIssues[val];\r\n                }\r\n                // console.log(\"val\", val)\r\n\r\n\r\n            })\r\n\r\n            if (val == results) {\r\n                console.log(val)\r\n            }\r\n            // return val.Labels === this.props.searchLabels[0]\r\n        })\r\n        // console.log(\"res\", res)\r\n\r\n        return (\r\n            <div>\r\n                {/* <h1>Project-Issue description</h1> */}\r\n                <hr />\r\n\r\n                <br />\r\n\r\n\r\n                <ul>\r\n\r\n                    {this.props.authorSelected ?\r\n                        // <p>authorSelected</p>\r\n                        <div>\r\n                            <h3>Your Search based on Authors</h3>\r\n                            <br />\r\n                            <hr />\r\n                            {Object.keys(this.state.listOfIssues).filter((val) => {\r\n                                if (this.state.listOfIssues[val].Author.includes(this.props.authorSearchKey)) {\r\n                                    // console.log(\"filtered data is\", val)\r\n                                    return val;\r\n                                }\r\n                            }).map((val, key) => {\r\n                                // console.log(\"author result\", this.state.listOfIssues[val].Author)\r\n                                let ans;\r\n                                return <div className=\"project-detail-search\">\r\n                                    <ul>\r\n                                        <li key={this.state.listOfIssues[val]} >\r\n                                            Author: {this.state.listOfIssues[val].Author}\r\n                                            <br />\r\n                                            Description: {this.state.listOfIssues[val].Description}\r\n                                            <br />\r\n                                            Labels: {this.state.listOfIssues[val].Labels}\r\n                                            <br />\r\n                                            Title: {this.state.listOfIssues[val].Title}\r\n                                            <br />\r\n                                            ProjectId: {this.state.listOfIssues[val].ProjectId}\r\n                                            <hr />\r\n\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                        : <div>\r\n                            {/* {Object.keys(this.state.listOfIssues).map(id => {\r\n                                if (this.state.listOfIssues[id].currentProjectId === this.props.projectId) {\r\n                                    return <li className=\"list-item\" key={id}> Author: {this.state.listOfIssues[id].Author} <br />\r\n                            Description: {this.state.listOfIssues[id].Description}<br />\r\n                                Labels: {this.state.listOfIssues[id].Labels}<br />\r\n                            Title: {this.state.listOfIssues[id].Title}<br />\r\n                            ProjectId: {this.state.listOfIssues[id].currentProjectId}<hr /></li>\r\n                                }\r\n                            })} */}\r\n\r\n                            {this.props.searchLabels.length === 0 ?\r\n                                Object.keys(this.state.listOfIssues).map(id => {\r\n                                    if (this.state.listOfIssues[id].currentProjectId === this.props.projectId) {\r\n                                        return <li className=\"list-item\" key={id}> Author: {this.state.listOfIssues[id].Author} <br />\r\n                            Description: {this.state.listOfIssues[id].Description}<br />\r\n                                Labels: {this.state.listOfIssues[id].Labels}<br />\r\n                            Title: {this.state.listOfIssues[id].Title}<br />\r\n                            ProjectId: {this.state.listOfIssues[id].currentProjectId}<hr /></li>\r\n                                    }\r\n                                })\r\n                                :\r\n                                <div>\r\n                                    <h3>Your Searches based on Labels</h3>\r\n                                    {\r\n\r\n                                        // data = Object.keys(this.state.listOfIssues).filter((val) => {\r\n                                        //     if (this.state.listOfIssues[val].Labels.includes(this.props.searchLabels.map(label => { return label }))) {\r\n                                        //         console.log(\"filtered data is\", this.state.listOfIssues[val].Author)\r\n                                        //         return val;\r\n                                        //     } else {\r\n                                        //         console.log(\"not found\")\r\n                                        //     }\r\n                                        // }).map(val => {\r\n                                        //     console.log(\"filtered data mapped\", val)\r\n                                        // })\r\n\r\n                                        // Object.keys(this.state.listOfIssues).filter(val => {\r\n                                        //     return this.props.searchLabels.map(label => {\r\n                                        //         if (this.state.listOfIssues[val].Labels === label) {\r\n                                        //             return this.state.listOfIssues[val];\r\n                                        //         }\r\n                                        //         // console.log(\"val\", val)\r\n\r\n\r\n                                        //     })\r\n\r\n                                        //     // return val.Labels === this.props.searchLabels[0]\r\n                                        // })\r\n\r\n                                        // Object.keys(this.state.listOfIssues).filter(function (array_el) {\r\n                                        //     return this.props.searchLabels.filter(function (anotherOne_el) {\r\n                                        //         return anotherOne_el == array_el.Labels;\r\n                                        //     }).length == 0\r\n                                        // })\r\n\r\n                                        filteredArr.map(result => {\r\n                                            return <ul style={{ listStyle: 'none' }}>\r\n                                                <li >\r\n                                                    Title: {result.Title}\r\n                                                    <br />\r\n                                                    Description: {result.Description}\r\n                                                    <br />\r\n                                                    Labels: {result.Labels}\r\n                                                    <br />\r\n                                                    Author: {result.Author}\r\n                                                    <br />\r\n\r\n                                                    <hr />\r\n                                                </li>\r\n                                            </ul>\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n                    }\r\n\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectDetail;","D:\\issue-tracker\\src\\components\\createIssue.js",["62","63","64","65","66"],"import React, { Component } from 'react';\r\nimport ProjectDetail from './ProjectDetail';\r\nimport HomePage from \"./homepage\";\r\n\r\n\r\nimport firebaseDB from \"./firebaseSetup\";\r\nimport \"./navbar.css\";\r\nimport \"../App.css\";\r\n\r\nclass CreateIssue extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n            Title: '',\r\n            Description: '',\r\n            Labels: '',\r\n            Author: '',\r\n            currentProjectId: this.props.currentProjectId,\r\n            homeBtnClicked: false,\r\n            labelKeyword: '',\r\n            searchLabels: [],\r\n            issueData: [],\r\n            authorChecked: false,\r\n            checkboxSearch: '',\r\n            checkboxAuthor: '',\r\n            searchByAuthor: false,\r\n            labelChecked: false,\r\n            // Title: '',\r\n            // Description: '',\r\n            // Labels: '',\r\n            // Author: '',\r\n            // currentProjectId: this.props.currentProjectId\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        firebaseDB.child('issueDesc').on('value', snapshot => {\r\n            if (snapshot.val() != null) {\r\n                this.setState({\r\n                    issueData: snapshot.val()\r\n                })\r\n                // console.log(\"snap-shot val\", snapshot.val());\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        var cntntObj = {\r\n\r\n            Title: this.state.Title,\r\n            Description: this.state.Description,\r\n            Labels: this.state.Labels,\r\n            Author: this.state.Author,\r\n            currentProjectId: this.state.currentProjectId\r\n        }\r\n        this.props.createIssue(cntntObj)\r\n    }\r\n\r\n    handleInput = (e) => {\r\n        e.preventDefault();\r\n        // console.log(e.target.value)\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n\r\n        })\r\n        // console.log(this.state.email);\r\n    }\r\n\r\n    // filterDataBySearchParams = () => {\r\n    //     let data = this.state.issueData;\r\n    //     data.map((val, key) => {\r\n    //         console.log(val.Title);\r\n    //     })\r\n    // }\r\n    // handleInputChange = (e) => {\r\n    //     e.preventDefault();\r\n    //     var name = e.target.name\r\n    //     var value = e.target.value\r\n    //     var values = this.state;\r\n    //     this.setState({\r\n    //         ...values,\r\n    //         [name]: value\r\n    //     })\r\n    // }\r\n    homeBtnHandler = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            homeBtnClicked: !this.state.homeBtnClicked\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handleSearchInput = (e) => {\r\n        this.setState({\r\n            labelKeyword: e.target.value\r\n        })\r\n        // console.log(\"inputValues\", inputValues);\r\n    }\r\n\r\n    // keyPressResults = (e) => {\r\n    //     if (this.state.labelChecked) {\r\n    //         if (e.key === \"enter\") {\r\n    //             // this.setState({\r\n    //             //     searchLabels: [...this.state.searchLabels, this.state.checkboxSearch]\r\n\r\n    //             // })\r\n    //             console.log(\"enter key pressed\");\r\n    //         }\r\n    //     }\r\n\r\n    // }\r\n\r\n    appendToState = () => {\r\n        if (this.state.labelChecked || this.state.labelChecked) {\r\n            let arr = [];\r\n            arr.push(this.state.checkboxSearch)\r\n            return arr;\r\n        }\r\n\r\n        // console.log(\"searchLabels\", this.state.searchLabels);\r\n\r\n    }\r\n\r\n    handleCheckBoxSearchInput = (e) => {\r\n        if (this.state.authorChecked || this.state.labelChecked) {\r\n            this.setState({\r\n                checkboxSearch: e.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    filterByAuthor = (e) => {\r\n        if (this.state.authorChecked) {\r\n            this.setState({\r\n                checkboxAuthor: Object.keys(this.state.issueData).filter((val) => {\r\n                    if (this.state.issueData[val].Author.includes(this.state.checkboxSearch)) {\r\n                        // console.log(\"filtered data is\", val)\r\n                        return val;\r\n                    }\r\n                }).map((val, key) => {\r\n                    // console.log(\"author result\", this.state.issueData[val].Author)\r\n                    let ans;\r\n                    return ans = this.state.issueData[val].Author;\r\n                })\r\n            }\r\n\r\n            )\r\n\r\n        } else if (this.state.labelChecked) {\r\n            // console.log(\"author not selected\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.log('homeBtnClicked', this.state.searchLabels);\r\n        // console.log(\"create-issue-props\", this.props)\r\n        // console.log(\"create-issue-content\", this.state.issueContent);\r\n        // console.log('homeBtnClicked', this.state.issueContent.currentProjectId);\r\n        // console.log(\"optionSelected\", this.state.optionSelected);\r\n        // console.log(\"issueData from state\", this.state.issueData);\r\n        const labelKeyword = this.state.labelKeyword;\r\n        const issueData = this.state.issueData;\r\n        // console.log(\"this.state.authorChecked\", this.state.authorChecked);\r\n        // console.log(\"Search by Author result?\", this.state.searchByAuthor);\r\n        // console.log(\"labelChecked\", this.state.labelChecked)\r\n        // console.log(\"searchLabels\", this.searchLabels)\r\n\r\n        // console.log(\"searchLabels\", this.state.searchLabels)\r\n        return (\r\n            <div>\r\n                {this.state.homeBtnClicked ? <HomePage />\r\n                    : <div>\r\n                        <nav class=\"navbar navbar-expand-sm   navbar-light bg-light\">\r\n                            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                <span class=\"navbar-toggler-icon\"></span>\r\n                            </button>\r\n                            <a class=\"navbar-brand\" href=\"#\">Issue Tracker</a>\r\n\r\n                            <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n                                <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                                    <li class=\"nav-item\">\r\n                                        <a class=\"nav-link\" onClick={this.homeBtnHandler}> Home </a>\r\n                                    </li>\r\n\r\n                                </ul>\r\n                                <form class=\"form-inline my-2 my-lg-0\" onSubmit={(e) => { e.preventDefault(); }}>\r\n                                    <input id=\"search-box\" name=\"searchLabels\" onChange={this.handleSearchInput} class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search by Title or Description\" aria-label=\"Search\" />\r\n                                    {/* <button onClick={this.appendToState}> Add to searchResults</button> */}\r\n                                </form>\r\n                            </div>\r\n                        </nav>\r\n\r\n                        <br />\r\n\r\n                        <h1>Create Issue</h1>\r\n                        <hr />\r\n                        <br />\r\n\r\n\r\n\r\n\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <input placeholder=\"Title\" name=\"Title\" onChange={this.handleInput} value={this.state.Title} className=\"create-issue-form\" />\r\n                            <input placeholder=\"Description\" name=\"Description\" onChange={this.handleInput} value={this.state.Description} className=\"create-issue-form\" />\r\n                            <input placeholder=\"Labels\" name=\"Labels\" onChange={this.handleInput} value={this.state.Labels} className=\"create-issue-form\" />\r\n                            <input placeholder=\"Author\" name=\"Author\" onChange={this.handleInput} value={this.state.Author} className=\"create-issue-form\" />\r\n                            <input type=\"submit\" id=\"submit-issue\" />\r\n                        </form>\r\n                        {/* <hr /> */}\r\n                        <br />\r\n                        <br />\r\n                        <div className=\"filter-check-box\">\r\n                            <input id=\"srch-label-author\" placeholder=\"Search by Label or Author\" name=\"checkboxSearch\"\r\n                                onChange={this.handleCheckBoxSearchInput}\r\n                                value={this.state.checkboxSearch}\r\n                                onKeyPress={(e) => {\r\n                                    if (this.state.labelChecked) {\r\n                                        if (e.key === \"Enter\") {\r\n                                            this.setState({\r\n                                                searchLabels: [...this.state.searchLabels, this.state.checkboxSearch]\r\n\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                }}\r\n\r\n                            />\r\n\r\n\r\n                            {/* <button onSubmit={this.filterByAuthor}>Search</button> */}\r\n                            <label className=\"checkbx-srch\">\r\n                                Author:\r\n                            <input\r\n                                    name=\"authorChecked\"\r\n                                    type=\"checkbox\"\r\n                                    checked={this.state.authorChecked}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            authorChecked: !this.state.authorChecked\r\n                                        })\r\n                                    }}\r\n\r\n                                />\r\n\r\n                            </label>\r\n                            <label className=\"checkbx-srch\">\r\n                                Labels:\r\n                            <input\r\n                                    name=\"labelChecked\"\r\n                                    type=\"checkbox\"\r\n                                    checked={this.state.labelChecked}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            labelChecked: !this.state.labelChecked\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </label>\r\n\r\n                            <button id=\"clr-btn\" onClick={(e) => {\r\n                                this.setState({\r\n                                    searchLabels: []\r\n                                })\r\n                            }}> Clear labels</button>\r\n                            <br />\r\n                            {\r\n                                this.state.searchLabels.map((label) => {\r\n                                    return <label id=\"srch-labels\"> {label} </label>\r\n                                    // <ul>\r\n                                    //     <li> labels: {label}</li>\r\n                                    // </ul>\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <br />\r\n\r\n                        {\r\n                            labelKeyword === '' ? <div> <ProjectDetail projectId={this.state.currentProjectId}\r\n                                authorSelected={this.state.authorChecked} authorSearchKey={this.state.checkboxSearch} searchLabels={this.state.searchLabels} /></div> :\r\n\r\n                                <div>\r\n                                    <h3> Results based on Title or Description Searches</h3>\r\n                                    <br />\r\n                                    <br />\r\n                                    {Object.keys(issueData).filter((val) => {\r\n                                        if (issueData[val].Title.includes(labelKeyword) || issueData[val].Description.includes(labelKeyword)) {\r\n                                            console.log(\"filtered data is\", val)\r\n                                            return val;\r\n                                        }\r\n                                    }).map((val, key) => {\r\n\r\n                                        return <div>\r\n                                            {/* <h3> Results based on Title or Description</h3> */}\r\n                                            <ul id=\"label-list\" >\r\n                                                <li >\r\n                                                    Title: {issueData[val].Title}\r\n                                                    <br />\r\n                                               Description: {issueData[val].Description}\r\n                                                    <br />\r\n                                               Labels: {issueData[val].Labels}\r\n                                                    <br />\r\n                                               Author: {issueData[val].Author}\r\n                                                    <br />\r\n                                                </li>\r\n                                                <hr />\r\n                                            </ul></div>\r\n\r\n                                    })}\r\n                                </div>\r\n                        }\r\n\r\n                    </div>\r\n                }\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateIssue;","D:\\issue-tracker\\src\\components\\firebaseSetup.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":4,"column":8,"nodeType":"73","messageId":"74","endLine":4,"endColumn":19},{"ruleId":"71","severity":1,"message":"75","line":5,"column":35,"nodeType":"73","messageId":"74","endLine":5,"endColumn":41},{"ruleId":"71","severity":1,"message":"76","line":5,"column":43,"nodeType":"73","messageId":"74","endLine":5,"endColumn":48},{"ruleId":"71","severity":1,"message":"77","line":5,"column":50,"nodeType":"73","messageId":"74","endLine":5,"endColumn":54},{"ruleId":"71","severity":1,"message":"78","line":8,"column":10,"nodeType":"73","messageId":"74","endLine":8,"endColumn":21},{"ruleId":"71","severity":1,"message":"79","line":9,"column":10,"nodeType":"73","messageId":"74","endLine":9,"endColumn":23},{"ruleId":"71","severity":1,"message":"80","line":14,"column":12,"nodeType":"73","messageId":"74","endLine":14,"endColumn":22},{"ruleId":"71","severity":1,"message":"79","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":21},{"ruleId":"71","severity":1,"message":"75","line":10,"column":30,"nodeType":"73","messageId":"74","endLine":10,"endColumn":36},{"ruleId":"71","severity":1,"message":"76","line":11,"column":5,"nodeType":"73","messageId":"74","endLine":11,"endColumn":10},{"ruleId":"71","severity":1,"message":"77","line":12,"column":5,"nodeType":"73","messageId":"74","endLine":12,"endColumn":9},{"ruleId":"81","severity":1,"message":"82","line":71,"column":37,"nodeType":"83","endLine":71,"endColumn":70},{"ruleId":"81","severity":1,"message":"82","line":76,"column":49,"nodeType":"83","endLine":76,"endColumn":78},{"ruleId":"71","severity":1,"message":"84","line":21,"column":21,"nodeType":"73","messageId":"74","endLine":21,"endColumn":26},{"ruleId":"71","severity":1,"message":"85","line":38,"column":13,"nodeType":"73","messageId":"74","endLine":38,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":38,"column":67,"nodeType":"88","messageId":"89","endLine":38,"endColumn":69},{"ruleId":"86","severity":1,"message":"90","line":40,"column":61,"nodeType":"88","messageId":"91","endLine":40,"endColumn":63},{"ruleId":"92","severity":1,"message":"93","line":50,"column":21,"nodeType":"94","messageId":"95","endLine":50,"endColumn":23},{"ruleId":"86","severity":1,"message":"96","line":73,"column":80,"nodeType":"88","messageId":"91","endLine":73,"endColumn":82},{"ruleId":"71","severity":1,"message":"97","line":80,"column":37,"nodeType":"73","messageId":"74","endLine":80,"endColumn":40},{"ruleId":"86","severity":1,"message":"90","line":112,"column":77,"nodeType":"88","messageId":"91","endLine":112,"endColumn":79},{"ruleId":"86","severity":1,"message":"96","line":139,"column":80,"nodeType":"88","messageId":"91","endLine":139,"endColumn":82},{"ruleId":"71","severity":1,"message":"98","line":147,"column":28,"nodeType":"73","messageId":"74","endLine":147,"endColumn":31},{"ruleId":"81","severity":1,"message":"82","line":181,"column":29,"nodeType":"83","endLine":181,"endColumn":62},{"ruleId":"81","severity":1,"message":"99","line":186,"column":41,"nodeType":"83","endLine":186,"endColumn":91},{"ruleId":"86","severity":1,"message":"96","line":289,"column":74,"nodeType":"88","messageId":"91","endLine":289,"endColumn":76},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'CreateIssue' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'createIssue' is defined but never used.","'ProjectDetail' is defined but never used.","'updateHome' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'state' is assigned a value but never used.","'res' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.filter() expects a value to be returned at the end of arrow function.","'ans' is defined but never used.","'ans' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]